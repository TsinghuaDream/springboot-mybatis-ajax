<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserMapper">
  <resultMap id="BaseResultMap" type="User">
    <id column="userId" jdbcType="INTEGER" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="userPsw" jdbcType="VARCHAR" property="userpsw" />
    <result column="userAddress" jdbcType="VARCHAR" property="useraddress" />
    <result column="userTel" jdbcType="VARCHAR" property="usertel" />
    <result column="userRegDate" jdbcType="TIMESTAMP" property="userregdate" />
    <result column="userImg" jdbcType="VARCHAR" property="userimg" />
  </resultMap>
  <sql id="Base_Column_List">
    userId, userName, userPsw, userAddress, userTel, userRegDate, userImg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where userId = #{userid,jdbcType=INTEGER}
  </select>


  <select id="query4Login" parameterType="User" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from userinfo
    where userName = #{username,jdbcType=VARCHAR} and userPsw = #{userpsw,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userinfo
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.User">
    insert into userinfo (userId, userName, userPsw, 
      userAddress, userTel, userRegDate, 
      userImg)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userpsw,jdbcType=VARCHAR}, 
      #{useraddress,jdbcType=VARCHAR}, #{usertel,jdbcType=VARCHAR}, #{userregdate,jdbcType=TIMESTAMP}, 
      #{userimg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.User">
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="userpsw != null">
        userPsw,
      </if>
      <if test="useraddress != null">
        userAddress,
      </if>
      <if test="usertel != null">
        userTel,
      </if>
      <if test="userregdate != null">
        userRegDate,
      </if>
      <if test="userimg != null">
        userImg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpsw != null">
        #{userpsw,jdbcType=VARCHAR},
      </if>
      <if test="useraddress != null">
        #{useraddress,jdbcType=VARCHAR},
      </if>
      <if test="usertel != null">
        #{usertel,jdbcType=VARCHAR},
      </if>
      <if test="userregdate != null">
        #{userregdate,jdbcType=TIMESTAMP},
      </if>
      <if test="userimg != null">
        #{userimg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="queryUserInfoByParams" parameterType="User" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from userinfo
    <where>

      <if test="username != null and username!=''">
        <bind name="userNamepattern" value="'%' + _parameter.getUsername() + '%'"/>
        and username like #{userNamepattern}
      </if>

      <if test="useraddress != null and useraddress != ''">
        and useraddress like '%${useraddress}%'
      </if>

      <if test="usertel != null and usertel != ''">
        and usertel like '%${usertel}%'
      </if>

      <if test="userregdate != null">
        and userregdate >= #{userregdate,jdbcType=TIMESTAMP}
      </if>

      <if test="userregdate2 != null">
        and userregdate &lt;= #{userregdate2,jdbcType=TIMESTAMP}
      </if>

    </where>

    order by userId desc

  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.User">
    update userinfo
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpsw != null">
        userPsw = #{userpsw,jdbcType=VARCHAR},
      </if>
      <if test="useraddress != null">
        userAddress = #{useraddress,jdbcType=VARCHAR},
      </if>
      <if test="usertel != null">
        userTel = #{usertel,jdbcType=VARCHAR},
      </if>
      <if test="userregdate != null">
        userRegDate = #{userregdate,jdbcType=TIMESTAMP},
      </if>
      <if test="userimg != null">
        userImg = #{userimg,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.User">
    update userinfo
    set userName = #{username,jdbcType=VARCHAR},
      userPsw = #{userpsw,jdbcType=VARCHAR},
      userAddress = #{useraddress,jdbcType=VARCHAR},
      userTel = #{usertel,jdbcType=VARCHAR},
      userRegDate = #{userregdate,jdbcType=TIMESTAMP},
      userImg = #{userimg,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>

</mapper>